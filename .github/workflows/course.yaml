name: "Build Documentation"

on:
  push:
    paths:
      - "scripts/**"
      - ".github/workflows/course.yaml"
  schedule:
    - cron: "0 0 * * *" # Set the workflow to run at 00:00 UTC+0 every day (8 AM Beijing time)
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-documentation:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    env:
      ORG_NAME: "HITSZ-OpenAuto"

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install uv and restore cache
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          activate-environment: true
          working-directory: scripts
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install Python dependencies
        run: uv sync --directory scripts/

      - name: Fetch public repositories in the organization
        run: curl -o repos_list.txt https://raw.githubusercontent.com/HITSZ-OpenAuto/repos-management/refs/heads/main/repos_list.txt

      - name: Parse repo list and set as env var
        run: |
          repos=$(jq -R -s -c 'split("\n") | map(select(length > 0))' repos_list.txt)
          echo "repos_array=$repos" >> $GITHUB_ENV

      - name: Generate card.txt for each repo
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: uv run scripts/courses/gen_links.py

      - name: Bulid directory pages
        run: ./scripts/workflows/build_directory_pages.sh

      - name: Build course pages
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: uv run scripts/courses/build_course_pages.py

      - name: Build semester pages
        run: ./scripts/workflows/build_semester_pages.sh

      - name: Generate daily report
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          NEWS_TYPE: daily
        run: uv run scripts/news/gen_news.py

      - name: Fetch opened PRs and issues
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: uv run scripts/courses/fetch_opened_prs_and_issues.py

      - name: Wrap badges
        run: |
          for file in $(find content/docs -name "*.md"); do
            uv run scripts/courses/wrap_badges.py "$file"
          done

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "24"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Format codebase
        run: pnpm run format

      - name: Format Python code
        uses: astral-sh/ruff-action@v3
      - run: ruff check --fix scripts/
      - run: ruff format scripts/

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          add: '["content", "scripts"]'
          pull: "--rebase --autostash"
          default_author: github_actions
          message: "docs: update course pages"
